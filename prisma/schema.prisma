generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model BaseTechnician {
  id           Int      @id @default(autoincrement())
  technicianId Int
  createdAt    DateTime @default(now())
}

model InternalOS {
  id        Int      @id @default(autoincrement())
  setorId   String
  tecnicoId Int
  problema  String
  descricao String
  createdAt DateTime @default(now())
  status    String   @default("Pendente")
  updatedAt DateTime
}

model Item {
  id             Int              @id @default(autoincrement())
  name           String
  brand          String
  serialNumber   String           @unique
  userId         String
  schoolId       Int?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  School         School?          @relation(fields: [schoolId], references: [id])
  Profile        Profile          @relation(fields: [userId], references: [userId])
  ItemHistory    ItemHistory[]
  MemorandumItem MemorandumItem[]
}

model ItemHistory {
  id          Int      @id @default(autoincrement())
  itemId      Int
  fromSchool  String
  toSchool    String
  movedAt     DateTime @default(now())
  generatedBy String?
  Item        Item     @relation(fields: [itemId], references: [id])

  @@index([itemId])
}

model Memorandum {
  id        Int                 @id @default(autoincrement())
  schoolName String
  district  String
  items     MemorandumItem[]    // Relacionamento com MemorandumItem
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

model MemorandumItem {
  id           Int        @id @default(autoincrement())
  memorandumId Int
  itemId       Int
  createdAt    DateTime   @default(now())
  Item         Item       @relation(fields: [itemId], references: [id])
  Memorandum   Memorandum @relation(fields: [memorandumId], references: [id])

  @@unique([memorandumId, itemId])
}

model OffTechnician {
  id           Int      @id @default(autoincrement())
  technicianId Int
  createdAt    DateTime @default(now())
}

model Os {
  id                        Int      @id @default(autoincrement())
  unidadeEscolar            String
  tecnicoResponsavel        String
  numeroOs                  String   @unique
  data                      String
  hora                      String
  notebooksOutroLocal       String
  tabletsOutroLocal         String
  solicitacaoDaVisita       String
  relatorio                 String
  pcsSieduca                String
  notebooksSieduca          String
  tabletsSieduca            String
  estabilizadoresSieduca    String
  naoHaSieduca              String
  dellSecretaria            String
  locadosSecretaria         String
  outrosSecretaria          String
  notebooksSecretaria       String
  tabletsSecretaria         String
  estabilizadoresSecretaria String
  dellOutroLocal            String
  locadosOutroLocal         String
  outrosOutroLocal          String
  estabilizadoresOutroLocal String
  naoHaOutroLocal           String
  redeBr                    String
  internetNasEscolas        String
  educacaoConectada         String
  naoHaProvedor             String
  rack                      String
  switch                    String
  roteador                  String
  oki                       String
  kyocera                   String
  outrasImpressoras         String
  solucionado               String
  emailResponsavel          String
  fotosAntes                String[]
  fotosDepois               String[]
  status                    String   @default("Pendente")
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @default(now())
}

model OsAssinada {
  id                        Int      @id @default(autoincrement())
  unidadeEscolar            String
  tecnicoResponsavel        String
  numeroOs                  String
  data                      String
  hora                      String
  notebooksOutroLocal       String
  tabletsOutroLocal         String
  solicitacaoDaVisita       String
  relatorio                 String
  pcsSieduca                String
  notebooksSieduca          String
  tabletsSieduca            String
  estabilizadoresSieduca    String
  naoHaSieduca              String
  dellSecretaria            String
  locadosSecretaria         String
  outrosSecretaria          String
  notebooksSecretaria       String
  tabletsSecretaria         String
  estabilizadoresSecretaria String
  dellOutroLocal            String
  locadosOutroLocal         String
  outrosOutroLocal          String
  estabilizadoresOutroLocal String
  naoHaOutroLocal           String
  redeBr                    String
  internetNasEscolas        String
  educacaoConectada         String
  naoHaProvedor             String
  rack                      String
  switch                    String
  roteador                  String
  oki                       String
  kyocera                   String
  outrasImpressoras         String
  solucionado               String
  emailResponsavel          String
  status                    String   @default("Pendente")
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime
  fotoAntes                 String?
  fotoDepois                String?
  nameAssigned              String
  cpfOrRegistration         String
  fotosAntes                String[]
  fotosDepois               String[]
}

model Printer {
  id         Int    @id @default(autoincrement())
  sigla      String
  setor      String
  modelo     String
  fabricante String
  serial     String @unique
  ip         String
}

model Profile {
  id          Int     @id @default(autoincrement())
  userId      String  @unique
  displayName String
  photoUrl    String?
  role        Role    @default(TECH)
  Item        Item[]
}

model School {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  inep         Int            @default(0)
  district     String?
  address      String?
  director     String?
  phone        String?
  email        String?
  Item         Item[]
  SchoolDemand SchoolDemand[]
}

model SchoolDemand {
  id        Int      @id @default(autoincrement())
  schoolId  Int
  demand    String
  createdAt DateTime @default(now())
  School    School   @relation(fields: [schoolId], references: [id])
}

model ServiceOrder {
  id                             Int       @id @default(autoincrement())
  orderNumber                    String
  visitDate                      DateTime?
  visitTime                      String
  school                         String
  visitResponsible               String
  visitResponsibleRole           String
  visitObjective                 String
  technicians                    String[]
  sieducaDetails                 String[]
  sieducaEquipmentDetails        String?
  secretaryDetails               String[]
  secretaryEquipmentDetails      String?
  otherLocationsDetails          String[]
  otherLocationsEquipmentDetails String?
  internetDetails                String[]
  rackDetails                    String[]
  rackEquipmentDetails           String?
  printerDetails                 String[]
  printerEquipmentDetails        String?
  visitDescription               String
  repairDescription              String
  problemSolved                  String
  reasonNotSolved                String?
  nextTechnicianInstructions     String?
  beforePhotos                   String[]
  afterPhotos                    String[]
  completionDate                 DateTime
  completionTime                 String
  completionResponsible          String
  signedPhoto                    String[]
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
}

model VisitTechnician {
  id           Int      @id @default(autoincrement())
  technicianId Int
  createdAt    DateTime @default(now())
}

enum Role {
  ADMIN
  TECH
  ONLYREAD
  ADMTOTAL
}
